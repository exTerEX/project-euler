cmake_minimum_required(VERSION 3.1 FATAL_ERROR)

project(euler LANGUAGES C)

find_package(OpenMP)
find_library(MATH_LIBRARY m)

add_executable(problem-001 problem-001.c)
add_executable(problem-002 problem-002.c)
add_executable(problem-003 problem-003.c)
add_executable(problem-004 problem-004.c)
add_executable(problem-005 problem-005.c)
add_executable(problem-006 problem-006.c)
add_executable(problem-007 problem-007.c)
add_executable(problem-008 problem-008.c)
add_executable(problem-009 problem-009.c)
if(MATH_LIBRARY)
  add_executable(problem-010 problem-010.c)
  target_link_libraries(problem-010 ${MATH_LIBRARY})
endif()
add_executable(problem-011 problem-011.c)
if(MATH_LIBRARY)
  add_executable(problem-012 problem-012.c)
  target_link_libraries(problem-012 ${MATH_LIBRARY})
endif()
add_executable(problem-013 problem-013.c)
add_executable(problem-014 problem-014.c)
add_executable(problem-015 problem-015.c)
if(MATH_LIBRARY)
  add_executable(problem-016 problem-016.c)
  target_link_libraries(problem-016 ${MATH_LIBRARY})
endif()
add_executable(problem-017 problem-017.c)
add_executable(problem-018 problem-018.c)
add_executable(problem-019 problem-019.c)
add_executable(problem-020 problem-020.c)
add_executable(problem-021 problem-021.c)
add_executable(problem-022 problem-022.c)
add_executable(problem-023 problem-023.c)
if (OPENMP_FOUND)
  target_link_libraries(problem-023 PRIVATE OpenMP::OpenMP_C)
endif()
add_executable(problem-025 problem-025.c)
if(MATH_LIBRARY)
  add_executable(problem-027 problem-027.c)
  target_link_libraries(problem-027 ${MATH_LIBRARY})
endif()
add_executable(problem-028 problem-028.c)
if(MATH_LIBRARY)
  add_executable(problem-030 problem-030.c)
  target_link_libraries(problem-030 ${MATH_LIBRARY})
endif()
